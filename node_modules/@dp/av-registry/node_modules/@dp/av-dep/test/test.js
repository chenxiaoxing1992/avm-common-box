var gulp = require("gulp");
var webpack = require("webpack");
var less = require('gulp-less');
var path = require('path');
var rootDir = "/av-crm/module/common-hui-list/";
var RESOURCE_SERVER_URL = "neocortex-4j.static.resourceServer";
var isDev = !process.env.ENV || process.env.ENV == "dev";
var tpl = require('gulp-tpl2mod');
var clean = require('gulp-clean');
// 默认为本地
var imgPrefix = "[path]";
gulp.task('build', function (callback) {
    // 编译
    function _action(){
        webpack({
            entry: [
                './js/index.js'
            ],
            output: {
                path:  './dist',
                filename: 'bundle.js',
            },
            plugins: [
                // new webpack.optimize.UglifyJsPlugin({
                //     compress: {
                //         warnings: false
                //     }
                // })
            ],
            resolve: {
                extensions: ['', '.js']
            },
            module: {
                loaders: [
                    {
                        test: /\.less$/,
                        loaders: ['style', 'css', 'less']
                    },
                    {
                        test: /\.css$/,
                        loaders: ['style', 'css']
                    },
                    {
                        test:   /\.(png|jpg|svg|ttf|eot|woff|woff2)$/,
                        loader: 'url?name='+imgPrefix+'[name].[ext]'
                    },{
                        test:/\.jsx$/,
                        loaders:['babel','jsx']
                    },{
                        test:/\.js$/,
                        loaders:['babel']
                    }
                ]
            },
            externals: 
              {
                'zepto': 'Zepto',
                'underscore':'_',
                'whereami':"Whereami",
                'dpapp':"DPApp"
              }
        }, function (err, stats) {
            if (err) throw new gutil.PluginError("webpack", err);
            callback();
        });
    }
    // lion解析
    function _resourceServerSanitizer(v) {
        if (v.indexOf("[") == 0) {
            return JSON.parse(v);
        }
        return [v.split(",")];
    }
    /*
        get host,重置imgPrefix
    */
    if(!isDev){
       process.env.NODE_LION_ENV = process.env.ENV == "beta" ? "qa" : process.env.ENV;
       var lion = require("@dp/lion")();
       lion.get(RESOURCE_SERVER_URL,function(err, value){
            if (err) {
                console.error(err);
                process.exit(1);
            }
            var resourceHost = _resourceServerSanitizer(value)[0][0];
            imgPrefix = resourceHost+rootDir+"[path]";
            _action();
        })
    }else{
        _action();
    }
});

gulp.task('less', function(cb) {

  gulp.src('./less/*.less')
    .pipe(less({
      paths: [
        path.join(__dirname, 'less')
      ]
    }))
    .on('error', console.error)
    .pipe(gulp.dest('css/')).on("end", function() {
      cb();
    });
  gulp.src('./less/**/img/**/*.*').pipe(gulp.dest('css/'))
});


gulp.task('clean', function(){
  gulp.src("./dist", {read:false})
    .pipe(clean()).on("end",function(cb){
        cb();
    });
});

gulp.task('tpl2mod',function(){
  gulp.src(path.join(__dirname, './js/**/*.html'))
      .pipe(tpl({
        prefix: 'module.exports=',
        suffix:";"
      }))
      .pipe(gulp.dest("./js"));
});

gulp.task('default', ['clean','tpl2mod','build']);
